apiVersion: v1
kind: Service
metadata:
  name: '{{ .Release.Name }}-kube-state-metrics'
  labels:
    app: '{{ .Release.Name }}-kube-state-metrics'
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    prometheus.io/scrape: 'true'
spec:
  ports:
  - name: http-metrics
    port: 8080
    targetPort: http-metrics
    protocol: TCP
  selector:
    app: '{{ .Release.Name }}-kube-state-metrics'
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}-kube-state-metrics'
  labels:
    app: '{{ .Release.Name }}-kube-state-metrics'
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      app: '{{ .Release.Name }}-kube-state-metrics'
  replicas: 1
  revisionHistoryLimit: {{ .Values.kubestatemetrics.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        app: '{{ .Release.Name }}-kube-state-metrics'
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
{{- if .Values.kubestatemetrics.tolerations }}
      tolerations:
{{ .Values.kubestatemetrics.tolerations | toYaml | indent 8 }}
{{- end }}
{{- if not .Values.kubestatemetrics.useDefaultServiceAccount }}
      serviceAccountName: {{ .Release.Name }}-kube-state-metrics
{{- end }}
      containers:
      - name: kube-state-metrics
        image: {{ .Values.kubestatemetrics.image | default (print "quay.io/coreos/kube-state-metrics:" .Values.kubestatemetrics.version) }}
        args:
        - '--v={{ .Values.kubestatemetrics.logLevel }}'
{{- if .Values.kubestatemetrics.collectors }}
        - '--collectors={{ .Values.kubestatemetrics.collectors }}'
{{- end }}
        ports:
        - name: http-metrics
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        resources:
{{ .Values.kubestatemetrics.resources | toYaml | indent 10 }}
      - name: addon-resizer
        image: gcr.io/google_containers/addon-resizer:1.0
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 10m
            memory: 30Mi
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        command:
          - /pod_nanny
          - --container=kube-state-metrics
          - --cpu=100m
          - --extra-cpu=1m
          - --memory=100Mi
          - --extra-memory=2Mi
          - --threshold=5
          - --deployment={{ .Release.Name }}-kube-state-metrics
