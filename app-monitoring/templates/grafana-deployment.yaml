{{ if .Values.grafana.enabled -}}
apiVersion: v1
kind: Service
metadata:
  name: '{{ .Release.Name }}-grafana'
  labels:
    app: '{{ .Release.Name }}-grafana'
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    prometheus.io/scrape: 'true'
spec:
  selector:
    app: '{{ .Release.Name }}-grafana'
  ports:
  - port: 3000
    protocol: TCP
{{- if .Values.grafana.authentication.enabled }}
{{- if .Values.grafana.authentication.oidc.enabled }}    
    targetPort: 9080
{{- else }}
    targetPort: 3000
{{- end }}
{{- else }}
    targetPort: 3000
{{- end }}
{{- if .Values.grafana.ingress.domain }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: '{{ .Release.Name }}-grafana'
  labels:
    app: '{{ .Release.Name }}-grafana'
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
spec:
  tls:
    - secretName: "tls-{{ .Values.grafana.ingress.domain }}"
      hosts:
        - {{ .Values.grafana.ingress.domain }}
  rules:
    - host: {{ .Values.grafana.ingress.domain }}
      http:
        paths:
          - path: /
            backend:
              serviceName: '{{ .Release.Name }}-grafana'
              servicePort: 3000
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-grafana
  labels:
    app: {{ .Release.Name }}-grafana
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
type: Opaque
data:
  grafana-admin-password:  {{ .Values.grafana.security.password | default ( randAlphaNum 10 ) | b64enc | quote }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}-grafana'
spec:
  replicas: 1
  revisionHistoryLimit: {{ .Values.grafana.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: '{{ .Release.Name }}-grafana'
  strategy:
    # we do not want 2 instances running in parallel during update
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      name: '{{ .Release.Name }}-grafana'
      labels:
        app: '{{ .Release.Name }}-grafana'
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
{{- if .Values.grafana.nodeName }}
      nodeName: '{{ .Values.grafana.nodeName }}'
{{- end }}
{{- if .Values.grafana.nodeSelector }}
      nodeSelector:
{{ .Values.grafana.nodeSelector | toYaml | indent 8 }}
{{- end }}
{{- if .Values.grafana.tolerations }}
      tolerations:
{{ .Values.grafana.tolerations | toYaml | indent 8 }}
{{- end }}
{{- if .Values.grafana.priorityClassName }}
      priorityClassName: '{{ .Values.grafana.priorityClassName }}'
{{- end }}
      containers:
{{- if .Values.grafana.authentication.enabled }}
{{- if .Values.grafana.authentication.oidc.enabled }}
      - name: grafana-auth-proxy
        image: quay.io/gambol99/keycloak-proxy:latest
        args:
        - --discovery-url={{ .Values.grafana.authentication.oidc.keycloak_url }}auth/realms/{{ .Values.grafana.authentication.oidc.realm }}/.well-known/openid-configuration
        - --skip-openid-provider-tls-verify=true
        - --client-id={{ .Values.grafana.authentication.oidc.client_id }}
        - --client-secret={{ .Values.grafana.authentication.oidc.client_secret }}
        - --listen=0.0.0.0:9080
        - --enable-logging=true
        - --enable-json-logging=true
        - --verbose=true
        - --enable-authorization-header=false
        - --enable-authorization-cookies=false
        - --upstream-url=http://127.0.0.1:3000
        {{- if .Values.grafana.ingress.domain }}
        - --redirection-url=https://{{ .Values.grafana.ingress.domain }}/
        {{- else if .Values.kubernetesApiEndpoint }}
        - '--redirection-url={{ .Values.kubernetesApiEndpoint }}/api/v1/namespaces/{{ .Release.Namespace }}/services/{{ .Release.Name }}-grafana:3000/proxy/'        
        {{- end }}
        - --resources=uri=/*|roles={{ .Values.grafana.authentication.oidc.grafana_role }}
        - --forbidden-page=/opt/templates/forbidden.html.tmpl
        - --add-claims=preferred_username
{{- if .Values.grafana.authentication.oidc.encryption_key }}
        - --enable-refresh-tokens=true
        - --encryption-key={{ .Values.grafana.authentication.oidc.encryption_key }}
        - --enable-encrypted-token=true
{{- end }}
        ports:
        - name: proxy-web
          containerPort: 9080
{{- end }}
{{- end }}        
      - name: '{{ .Release.Name }}-grafana'
        image: grafana/grafana:{{ .Values.grafana.version }}
        env:
          {{- if .Values.grafana.ingress.domain }}
          - name: GF_SERVER_ROOT_URL
            value: 'https://{{ .Values.grafana.ingress.domain }}'
          {{- else if .Values.kubernetesApiEndpoint }}
          - name: GF_SERVER_ROOT_URL
            value: '/api/v1/namespaces/{{ .Release.Namespace }}/services/{{ .Release.Name }}-grafana/proxy/'
          {{- end }}
          - name: GF_DASHBOARDS_JSON_ENABLED
            value: 'true'
          - name: GF_DASHBOARDS_JSON_PATH
            value: '/grafana-conf/'
          - name: GF_INSTALL_PLUGINS
            value: mtanda-histogram-panel
          - name: GF_SECURITY_ADMIN_USER
            value: {{ .Values.grafana.security.admin | default ("admin") | quote }}
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-grafana
                key: grafana-admin-password
          - name: GF_USERS_ALLOW_SIGN_UP
            value: 'false'
          - name: GF_USERS_AUTO_ASSIGN_ORG
            value: 'true'
          - name: GF_USERS_AUTO_ASSIGN_ORG_ROLE
            value: 'Editor'
          - name: GF_AUTH_PROXY_ENABLED
            value: 'true'
          - name: GF_AUTH_PROXY_HEADER_NAME
            value: 'X-Auth-Username'
#          - name: GF_AUTH_PROXY_HEADER_PROPERTY
#            value: 'username'
#          - name: GF_AUTH_PROXY_AUTO_SIGN_UP
#            value: 'true'
#          - name: GF_AUTH_DISABLE_LOGIN_FORM
#            value: "false"
#          - name: GF_AUTH_DISABLE_SIGNOUT_MENU
#            value: "false"
#          - name: GF_LOG_LEVEL
#            value: 'debug'
#          - name: GF_AUTH_GENERIC_OAUTH_ENABLED
#            value: "true"
#          - name: GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP
#            value: "true"
#          - name: GF_AUTH_GENERIC_OAUTH_CLIENT_ID
#            value: {{ .Values.grafana.authentication.oidc.client_id }}
#          - name: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
#            value: {{ .Values.grafana.authentication.oidc.client_secret }}
#          - name: GF_AUTH_GENERIC_OAUTH_AUTH_URL
#            value: {{ .Values.grafana.authentication.oidc.keycloak_url }}auth/realms/{{ .Values.grafana.authentication.oidc.realm }}/protocol/openid-connect/auth
#          - name: GF_AUTH_GENERIC_OAUTH_TOKEN_URL
#            value: {{ .Values.grafana.authentication.oidc.keycloak_url }}auth/realms/{{ .Values.grafana.authentication.oidc.realm }}/protocol/openid-connect/token
#          - name: GF_AUTH_GENERIC_OAUTH_API_URL
#            value: {{ .Values.grafana.authentication.oidc.keycloak_url }}auth/realms/{{ .Values.grafana.authentication.oidc.realm }}/protocol/openid-connect/userinfo
        resources:
{{ .Values.grafana.resources | toYaml | indent 10 }}
        ports:
        - name: web
          containerPort: 3000
        volumeMounts:
        - name: data-volume
          mountPath: /var/lib/grafana
{{- if .Values.grafana.persistence.subPath }}
          subPath: {{ .Values.grafana.persistence.subPath }}
{{- end }}
        - name: config-volume
          mountPath: /grafana-conf
      volumes:
      - name: data-volume
{{- if not .Values.grafana.persistence.enabled }}
        emptyDir: {}
{{- else if .Values.grafana.persistence.hostPath }}
        hostPath:
          path: {{ .Values.grafana.persistence.hostPath }}
{{- if semverCompare ">= 1.8" ( printf "%s.%s" .Capabilities.KubeVersion.Major .Capabilities.KubeVersion.Minor ) }}
          type: DirectoryOrCreate
{{- end }}
{{- else if .Values.grafana.persistence.preconfiguredPersistentVolumeClaim }}
        persistentVolumeClaim:
          claimName: {{ .Values.grafana.persistence.preconfiguredPersistentVolumeClaim }}
{{- else }}
        persistentVolumeClaim:
          claimName: '{{ .Release.Name }}-grafana'
{{- end }}
      - name: config-volume
        configMap:
          name: '{{ .Release.Name }}-grafana'
{{- end }}
