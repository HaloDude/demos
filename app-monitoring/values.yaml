# Default values for kublr-monitoring.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# If kubernetesApi is specified, the package will be able to configure Prometheus, Grafana, and Alertmanager UI access
# via Kubernetes proxy API
kubernetesApiEndpoint:

# Prometheus specific configuration.
prometheus:
  # List of Prometheus versions available at https://hub.docker.com/r/prom/prometheus/tags/
  version: v2.0.0
  revisionHistoryLimit: 0
  logLevel: warn
  ingress:
    domain:
  resources:
    limits:
      memory: 1024Mi
    requests:
      cpu: 700m
      memory: 1024Mi
  persistence:
    enabled: false
    hostPath:
    preconfiguredPersistentVolumeClaim:
    subPath: ''
    storageClass: generic
    accessMode: ReadWriteOnce
    size: 20Gi
  nodeName:
  nodeSelector: {}
  tolerations: []
  authentication:
    enabled: false
    oidc:
      enabled: false
      encryption_key: ""
      keycloak_url: "https://keycloak.example.com/"
      realm: "iam"
      client_id: ""
      client_secret: ""
      admin_role: "admin"
      guest_role: "prometheus"
      encryption_key: false
  # If nead add jmx exporters add app name into configuration section
  configuration: |    
#    - job_name: 'keycloak'
#      static_configs:
#        - targets:
#            - "keycloak-keycloak.develop:8180"
#      metrics_path: '/metrics'
#      scrape_interval: 30s
#      
#    - job_name: 'jmx_exporter_10'
#      static_configs:
#        - targets: [ 'app-jenkins.develop:8180', 'app-nexus.develop:8180' ]
#      scrape_interval: 15s
      
instanceDiscovery:
  enabled: false
  registry: docker.ecp.eastbanctech.com
  name: instance-discovery
  version: 0.0.1-develop-12
  revisionHistoryLimit: 1
  env:
    verbose: true
    schedule: 5m
    prometheusFile: /instance-discovery/instances.yaml
  resources:
    limits:
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 256Mi

kubestatemetrics:
  version: v1.1.0
  # Image to use
  # If left empty, defaults to "gcr.io/google_containers/kube-state-metrics:<version>"
  #image: quay.io/coreos/kube-state-metrics:v1.0.1
  image:
  revisionHistoryLimit: 0
  logLevel: 0
  # Comma-separated list of collectors to be enabled.
  # In v1.0.1 defaults to "cronjobs,daemonsets,deployments,jobs,limitranges,nodes,pods,replicasets,replicationcontrollers,resourcequotas,services,statefulsets,persistentvolumeclaims"
  # Leave empty for default.
  # For Kubernetes 1.6 and 1.7 CronJobs are not enabled by default as alpha feature, so it is recommended to exclude them
  # from this list to avoid excessive logging
  collectors:
  resources:
    requests:
      memory: 48Mi
      cpu: 100m
    limits:
      memory: 48Mi
  # This property is provided for backward compatibility:
  # In Kublr builds v0.2.4-beta.2-develop.114 and lower Tiller addon lacked permissions to create service accounts,
  # cluster roles, and cluster role bindings (at least).
  # Therefore if you are applying app-monitoring package to an older Kublr Kubernetes cluster, set this property to true
  # @deprecated
  useDefaultServiceAccount: false
  tolerations: []

# Prometheus Alert Manager specific configuration
alertmanager:
  enabled: true
  # Use OpenID auth proxy for prometheus
  authentication:
    enabled: false
    oidc:
      enabled: false
      encryption_key: ""
      keycloak_url: "https://keycloak.example.com/"
      realm: "iam"
      client_id: ""
      client_secret: ""
      admin_role: "admins"
      encryption_key: false  
  # List of Prometheus Alert Manager versions available at https://hub.docker.com/r/prom/alertmanager/tags/
  version: v0.11.0
  revisionHistoryLimit: 0
  logLevel: warn
  ingress:
    domain:
  resources:
    limits:
      memory: 256Mi
    requests:
      cpu: 50m
      memory: 256Mi
  tolerations: []
  # if configuration is not specified, default configuration will be used with no alerts delivery
  configuration:

# Grafana specific configuration.
grafana:
  enabled: true
  security:
    admin: admin    # default grafana admin user
    password: admin # default grafana admin password. Comment it to autogenerate secret with this password
  # Use OpenID auth proxy for grafana
  authentication:
    enabled: false
    oidc:
      enabled: false
      encryption_key: ""   # 16 or 32 alphanum string used for encrypt cookie with jwt. Use empty to disable cookie encryption
      keycloak_url: "https://keycloak.example.com/"
      realm: "iam"
      client_id: "grafana"
      client_secret: ""
      grafana_role: "admin"  # role in keycloak that has access to grafana
  # List of Grafana versions available at: https://hub.docker.com/r/grafana/grafana/tags/
  version: 4.6.2
  revisionHistoryLimit: 0
  ingress:
    domain:
  resources:
    limits:
      memory: 256Mi
    requests:
      cpu: 300m
      memory: 256Mi
  persistence:
    enabled: false
    hostPath:
    preconfiguredPersistentVolumeClaim:
# subPath does not work for hostPath volumes with containerized kubelet, so set it to empty in this case
    subPath: var/lib/grafana
    storageClass: generic
    accessMode: ReadWriteOnce
    size: 20Gi
  nodeName:
  nodeSelector: {}
  tolerations: []

# Custom Mertics Server is needed for horizontal pod autoscaler
CustomMetricsServer:
  enabled: true
  image:
    repository: luxas/k8s-prometheus-adapter
    tag: v0.2.0-beta.0
  relistInterval: 30s
  rateInterval: 60s
  containerPort: 443
  servicePort: 443
  logLevel: 6
  replicaCount: 1
  resources: {}