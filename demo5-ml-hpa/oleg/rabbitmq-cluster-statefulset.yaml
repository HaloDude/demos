apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: kube-system
spec:
  serviceName: "rabbitmq"
  replicas: 1
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.7.3
        resources:
          requests:
            memory: "3Gi"
          limits:
            memory: "4Gi"
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - |
                echo "Starting..."
                if [ -z "$(grep rabbitmq /etc/resolv.conf)" ]; then
                  echo "Configuring /etc/resolv.conf"
                  sed "s/^search \([^ ]\+\)/search rabbitmq.\1 \1/" /etc/resolv.conf > /etc/resolv.conf.new;
                  cat /etc/resolv.conf.new > /etc/resolv.conf;
                  rm /etc/resolv.conf.new;
                  cat /etc/resolv.conf
                fi;
                until rabbitmqctl node_health_check; do
                  echo "Waiting rabbitmqctl node_health_check..."
                  sleep 1;
                done;
                echo "Done waiting. Cluster status:"
                rabbitmqctl cluster_status
                if [[ "$HOSTNAME" != "rabbitmq-0" && -z "$(rabbitmqctl cluster_status | grep rabbitmq-0)" ]]; then
                  echo "Joining cluster..."
                  rabbitmqctl stop_app;
                  rabbitmqctl join_cluster rabbit@rabbitmq-0;
                  rabbitmqctl start_app;
                  echo "Joining done."
                fi;
                echo "Configuring RabbitMQ"
                rabbitmqctl add_vhost vh1
                rabbitmqctl set_permissions -p vh1 guest ".*" ".*" ".*"
                rabbitmqctl set_policy -p vh1 ha-all "." '{"ha-mode":"exactly","ha-params":3,"ha-sync-mode":"automatic"}'
                rabbitmqctl set_vm_memory_high_watermark 0.9
                echo "Configuring done"
        env:
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: rabbitmq-config
              key: erlang-cookie
        ports:
        - containerPort: 5672
          name: amqp
        - containerPort: 15672
          name: http-api
        livenessProbe:
          exec:
            command:
            - rabbitmqctl
            - status
          initialDelaySeconds: 120
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - rabbitmqctl
            - status
          initialDelaySeconds: 10
          timeoutSeconds: 3
          periodSeconds: 5
        volumeMounts:
        - name: rabbitmq
          mountPath: /var/lib/rabbitmq
        - mountPath: /etc/rabbitmq
          name: config-volume
      volumes:
      - configMap:
          name: rabbitmq-config
        name: config-volume
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq
      annotations:
        volume.beta.kubernetes.io/storage-class: default
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 4Gi