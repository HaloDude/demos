apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: helloworld
  annotations:
    kubernetes.io/ingress.class: "istio"
spec:
  rules:
  - http:
      paths:
      - path: /hello
        backend:
          serviceName: helloworld
          servicePort: 80
      - path: /getconfig
        backend:
          serviceName: helloworld
          servicePort: 80
---
apiVersion: config.istio.io/v1alpha2
kind: RouteRule
metadata:
  name: prod
spec:
  destination:
    name: helloworld
  precedence: 3
#  httpFault: # WORKS!
#    delay:
#      fixedDelay: 10s
#      percent: 100
#  match:     # WORKS!
#    request:
#      headers:
#        cookie:
#          regex: ^(.*?;)?(user=jason)(;.*)?$
#
  match:     # WORKS (in service and ingress)
    request:
      headers:
        ver-{{ template "fullname" . }}:
          prefix: v1
#  httpFault: WORKS!
#    delay:
#      percent: 100
#      fixedDelay: 10s
#
#  httpFault: # WORKS!
#    abort:
#      percent: 50
#      httpStatus: 401
#

  route:
  - labels:
      version: v1
    weight: 90
  - labels:
      version: v2
    weight: 10
#  httpFault: # WORKS!
#    delay:
#      percent: 10
#      fixedDelay: 10s
#
#  httpReqTimeout: # DOESN'T WORK
#    simpleTimeout:
#      timeout: 10s
#
---
apiVersion: config.istio.io/v1alpha2
kind: RouteRule
metadata:
  name: prod2
spec:
  destination:
    name: helloworld
  precedence: 2
  route:
  - labels:
      version: v2
  httpReqTimeout:
    simpleTimeout:
      timeout: 10s
---
#apiVersion: config.istio.io/v1alpha2
#kind: DestinationPolicy
#metadata:
#  name: helloworld-cb
#spec:
#  destination:
#    name: helloworld
#    labels:
#      version: v1
#  circuitBreaker:
#    simpleCb:
#      maxConnections: 1
#      httpMaxPendingRequests: 1
#      sleepWindow: 3m
#      httpDetectionInterval: 1s
#      httpMaxEjectionPercent: 100
#      httpConsecutiveErrors: 1
#      httpMaxRequestsPerConnection: 1